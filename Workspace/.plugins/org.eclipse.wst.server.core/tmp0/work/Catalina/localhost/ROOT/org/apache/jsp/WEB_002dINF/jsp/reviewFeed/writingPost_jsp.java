/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.12
 * Generated at: 2018-12-16 04:23:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.reviewFeed;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class writingPost_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/Users/Jeaha/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/java110-team-project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1539714814447L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<div class=\"modal fade\" id=\"reviewModal\" tabindex=\"-1\" role=\"dialog\">\r\n");
      out.write("\t<div class=\"modal-dialog modal-lg pr-0\" role=\"document\" id=\"rModal\">\r\n");
      out.write("\t\t<form action=\"add\" method=\"post\" enctype=\"multipart/form-data\" id=\"postform\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"modal-header form-inline\">\r\n");
      out.write("\t\t\t\t\t<h5 class=\"modal-title\">리뷰 작성하기</h5>\r\n");
      out.write("\r\n");
      out.write("<input type=\"hidden\" id=\"pstTypeNo\" name=\"pstTypeNo\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"input-group ui-widget ui-front onlyMovie msearch\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group-text\">영화</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"form-control ui-autocomplete-input\"\r\n");
      out.write("\t\t\t\t\t\t\tid=\"movieSearch\" name=\"title\" placeholder=\"영화를 검색해주세요\"\r\n");
      out.write("\t\t\t\t\t\t\tautocomplete=\"off\"> <input type=\"hidden\" id=\"movieId\"\r\n");
      out.write("\t\t\t\t\t\t\tname=\"mvno\" value=\"0\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("<label class=\"switch\"> <input type=\"checkbox\" name=\"open\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"open\" checked> <span class=\"slider round\"> <i\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"fas fa-lock dis-none\" id=\"lock\"></i> <i\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"fas fa-globe-americas\" id=\"globe\"></i>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t</label>\r\n");
      out.write("\r\n");
      out.write("<button type=\"button\" class=\"close ml-0\" data-dismiss=\"modal\"\r\n");
      out.write("\t\t\t\t\t\taria-label=\"Close\">\r\n");
      out.write("\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n");
      out.write("\t\t\t\t\t</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\r\n");
      out.write("<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<textarea name=\"content\" class=\"form-control resize-none\"\r\n");
      out.write("\t\t\t\t\t\t\trows=\"10\" id=\"reviewTxtarea\" placeholder=\"리뷰를 작성해주세요\" maxlength=\"1000\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t  <span class=\"counter float-right mt-1 mb-1\" >글자 제한 1000자</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"input-group\" id=\"ftag-input\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"input-group-text\">친구태그하기</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"ftag form-control p-0\" id=\"ftag-div\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"flw\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"ftagsForAdd\" name=\"ftagsForAdd\"\r\n");
      out.write("\t\t\t\t\t\t\tvalue=\"-1\" />\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("<input id=\"photList\" type=\"text\" class=\"d-none\" name=\"fileNames\"></input>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"file btn btn-primary photo-star-section\"\r\n");
      out.write("\t\t\t\t\t\t\tonclick=\"document.getElementById('picupload1').click();\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"far fa-images\"></i>사진 <input type=\"file\" size=\"30\"\r\n");
      out.write("\t\t\t\t\t\t\t\taccept=\"image/*\" class=\"picupload d-none\" id=\"picupload1\"\r\n");
      out.write("\t\t\t\t\t\t\t\tmultiple />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("<button class=\"btn btn-primary onlyMovie photo-star-section\"\r\n");
      out.write("\t\t\t\t\t\t\ttype=\"button\" id=\"starbtn\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"far fa-star\"></i>별점\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"star\" name=\"star\" value=\"0\" />\r\n");
      out.write("\t\t\t\t\t\t<div class='starrr onlyMovie photo-star-section' id=\"showStar\"></div>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div id=\"temp\" ></div>\r\n");
      out.write("<ul id=\"media-list\" class=\"clearfix\">\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-secondary\"\r\n");
      out.write("\t\t\t\t\t\tdata-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"modalSubmit\">등록</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
