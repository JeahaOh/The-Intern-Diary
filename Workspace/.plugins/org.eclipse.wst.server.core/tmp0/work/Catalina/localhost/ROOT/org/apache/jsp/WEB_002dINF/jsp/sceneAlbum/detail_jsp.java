/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.12
 * Generated at: 2018-12-16 05:07:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.sceneAlbum;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class detail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/Users/Jeaha/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/java110-team-project/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/Users/Jeaha/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/java110-team-project/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1539714814447L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 앨범 상세 -->\r\n");
      out.write("<section class=\"col-lg-12\">\r\n");
      out.write("    <div class=\"row detailList col-lg-12 p-0\">\r\n");
      out.write("        <div class=\"col-lg-12 mt-4 ml-3 pr-5 mb-5\">\r\n");
      out.write("            <span class=\"titl\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneAlbum.lbmTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</span>\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("</div>\r\n");
      out.write("        <!-- 앨범 목록 -->\r\n");
      out.write("        <div class=\"row col-lg-12\" style=\"margin: 0 auto;\">\r\n");
      out.write("            <!-- 장면 -->\r\n");
      out.write("            ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../sceneAlbum/mgrPopup.jsp", out, false);
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("var lbmno = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneAlbum.lbmno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("var tgtMno = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${targetUser.mno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("var removedLbmno = [];\r\n");
      out.write("        \r\n");
      out.write("        // 모달 종료시 reload\r\n");
      out.write("        $(document.body).on('hidden.bs.modal', '#mgrModal', function (e) {           \r\n");
      out.write("            \r\n");
      out.write("            var isRemoved = false;\r\n");
      out.write("            \r\n");
      out.write("            for(var i=0; i<removedLbmno.length; i++){\r\n");
      out.write("                if(removedLbmno[i]==lbmno){\r\n");
      out.write("                    isRemoved = true;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            if(isRemoved == false){\r\n");
      out.write("\t            location.reload();\r\n");
      out.write("\t            $('#mgrModal').show();\r\n");
      out.write("            }else{\r\n");
      out.write("                commonAlert('error','해당 앨범은 삭제되었습니다.');\r\n");
      out.write("                location.href= \"/app/sceneAlbum/list?tgtMno=\"+tgtMno;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // 모달 상단에 앨범명 수정 위한 마우스 오버 이벤트 \r\n");
      out.write("        $(document.body).on('mouseover', '.title_box', function() {\r\n");
      out.write("            $('.title_edit').css('visibility', 'visible');\r\n");
      out.write("        }).on('mouseleave', '.title_box', function() {\r\n");
      out.write("            $('.title_edit').css('visibility', 'hidden');\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        $(document.body).on('mouseover', '.album_title', function() {\r\n");
      out.write("            $(this).find('.al_trash').css('visibility', 'visible');\r\n");
      out.write("        }).on('mouseleave', '.album_title', function() {\r\n");
      out.write("            $(this).find('.al_trash').css('visibility', 'hidden');\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // 상단의 앨범 편집 버튼 누를 경우 \r\n");
      out.write("        function editTitle(lbmno){\r\n");
      out.write("            console.log('editTitle'+lbmno);\r\n");
      out.write("            var html = '';\r\n");
      out.write("            html += '<div class=\"form-group\">';\r\n");
      out.write("            html += '<input onkeydown=\"EditByEnterKey('+lbmno+')\" type=\"text\" name=\"tContent\" class=\"form-control\" autocomplete=\"off\" maxlength=\"23\" placeholder=\"보관함명\">';\r\n");
      out.write("            html += '<a href=#><i class=\"far fa-check-circle\" onclick=\"editBtn('+lbmno+')\" style=\"font-size:1.5rem;\"></i></a></div>';\r\n");
      out.write("            \r\n");
      out.write("            $('.title_box').html(html);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("       /*\r\n");
      out.write("       \r\n");
      out.write("       $('.form-group input[name=\"tContent\"]').keypress(function(e){\r\n");
      out.write("           if(e.keyCode == 13){\r\n");
      out.write("               alert($(this));\r\n");
      out.write("           } \r\n");
      out.write("        }); \r\n");
      out.write("       \r\n");
      out.write("       */\r\n");
      out.write("         \r\n");
      out.write("    /* \r\n");
      out.write("    id=\"editName\"\r\n");
      out.write("    $(\"#editName\").keypress(\r\n");
      out.write("                function(event){\r\n");
      out.write("                  if (event.which == '13') {\r\n");
      out.write("                    alert('hi');\r\n");
      out.write("                    event.preventDefault();\r\n");
      out.write("                  }\r\n");
      out.write("              });\r\n");
      out.write("         */\r\n");
      out.write("        \r\n");
      out.write("         // 앨범 명 수정 엔터키로\r\n");
      out.write("        function EditByEnterKey(lbmno){\r\n");
      out.write("            if(event.keyCode == 13) {\r\n");
      out.write("                alert('enter'+ lbmno);\r\n");
      out.write("                editBtn(lbmno);\r\n");
      out.write("           }\r\n");
      out.write("        }\r\n");
      out.write("          \r\n");
      out.write("        //앨범 명 수정?\r\n");
      out.write("        function editBtn(lbmno){\r\n");
      out.write("            \r\n");
      out.write("            var html='';\r\n");
      out.write("            html += $('.title_box input[name=\"tContent\"]').val();\r\n");
      out.write("            html += '<span class=\"title_edit\" onclick=\"editTitle('+lbmno+')\">';\r\n");
      out.write("            html += '<i class=\"far fa-edit\" style=\"font-size: 1rem;\"></i></span>';\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("             $.ajax({\r\n");
      out.write("                type:'POST',\r\n");
      out.write("                url: '/app/sceneAlbum/editLbm',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json'\r\n");
      out.write("                },\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                   \"lbmno\" : lbmno,\r\n");
      out.write("                   \"lbmTitle\": $('.title_box input[name=\"tContent\"]').val()\r\n");
      out.write("                }),\r\n");
      out.write("                success:function(data){\r\n");
      out.write("                    commonAlert('success', '앨범명을 수정하였습니다.');\r\n");
      out.write("                    showLbmList(data);\r\n");
      out.write("                    $('.title_box').html(html);\r\n");
      out.write("                }\r\n");
      out.write("            }); \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("     // 수정하기 버튼 클릭\r\n");
      out.write("        function editButton(lbmno, lbmTitle, open){\r\n");
      out.write("            document.getElementById('mgrAlbum').click();\r\n");
      out.write("            editAlbum(lbmno, lbmTitle, open);\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 수정모달에서 앨범명 클릭시 변화\r\n");
      out.write("        function editAlbum(lbmno, lbmTitle, open){\r\n");
      out.write("            \r\n");
      out.write("            var html='<button type=\"button\" class=\"close\" data-dismiss=\"modal\"';\r\n");
      out.write("            html+='aria-label=\"Close\">';\r\n");
      out.write("            html+='<span aria-hidden=\"true\">&times;</span>';\r\n");
      out.write("            html+='</button>';\r\n");
      out.write("            \r\n");
      out.write("            if(open==true){\r\n");
      out.write("                $('.openIcon').parent().html('<span class=\"openIcon\" onclick=\"editOpen('+lbmno +','+ open+')\"><i class=\"fas fa-globe-americas globe\"></i></span>');\r\n");
      out.write("            }else{\r\n");
      out.write("                $('.openIcon').parent().html('<span class=\"openIcon\" onclick=\"editOpen('+lbmno +','+ open+')\"><i class=\"fas fa-lock lock\"></i></span>');\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            $('.openIcon').parent().append(html);\r\n");
      out.write("            $('.title_box').html(lbmTitle+'<span class=\"title_edit\" onclick=\"editTitle('+lbmno+')\">'+'<i class=\"far fa-edit\" style=\"font-size: 1rem;\"></i></span>');\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("                type:'POST',\r\n");
      out.write("                url: '/app/sceneAlbum/srList',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json'\r\n");
      out.write("                },\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                   \"lbmno\" :  lbmno\r\n");
      out.write("                }),\r\n");
      out.write("                success:function(data){\r\n");
      out.write("                    //console.log('장면리스트가져옴');\r\n");
      out.write("                    showSrList(data);\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 공개여부 수정\r\n");
      out.write("        function editOpen(lbmno, open){\r\n");
      out.write("            \r\n");
      out.write("            var html='<button type=\"button\" class=\"close\" data-dismiss=\"modal\"';\r\n");
      out.write("               html+='aria-label=\"Close\">';\r\n");
      out.write("               html+='<span aria-hidden=\"true\">&times;</span>';\r\n");
      out.write("               html+='</button>';\r\n");
      out.write("            \r\n");
      out.write("            $( \".openIcon\" ).toggleClass(function(){\r\n");
      out.write("               if($(this).find('i').hasClass('globe')){\r\n");
      out.write("                   open = false;\r\n");
      out.write("                   $(this).parent().html('<span class=\"openIcon\" onclick=\"editOpen('+lbmno +','+ open+')\"><i class=\"fas fa-lock lock\"></i></span>');\r\n");
      out.write("               }else{\r\n");
      out.write("                   open = true;\r\n");
      out.write("                   $(this).parent().html('<span class=\"openIcon\" onclick=\"editOpen('+lbmno +','+ open+')\"><i class=\"fas fa-globe-americas globe\"></i></span>');\r\n");
      out.write("               }\r\n");
      out.write("                \r\n");
      out.write("            });\r\n");
      out.write("            $('.openIcon').parent().append(html);\r\n");
      out.write("             \r\n");
      out.write("          \r\n");
      out.write("             $.ajax({\r\n");
      out.write("                type:'POST',\r\n");
      out.write("                url: '/app/sceneAlbum/editOpen',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json'\r\n");
      out.write("                },\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                   \"lbmno\" :  lbmno,\r\n");
      out.write("                   \"open\" : open\r\n");
      out.write("                }),\r\n");
      out.write("                success:function(data){\r\n");
      out.write("                    commonAlert('success', '공개여부를 수정하였습니다.');\r\n");
      out.write("                    showLbmList(data);\r\n");
      out.write("                    editAlbum(data.sceneAlbum.lbmno, data.sceneAlbum.lbmTitle, data.sceneAlbum.open);\r\n");
      out.write("                }\r\n");
      out.write("            });    \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        // 앨범 삭제여부 확인\r\n");
      out.write("        function removeLbm(lbmno){\r\n");
      out.write("           \r\n");
      out.write("            commonConfirm(lbmno, '정말로 삭제하시겠습니까?');\r\n");
      out.write("            $('.modal-header').click(function(){\r\n");
      out.write("                $('.noty_layout').css('display', 'none');\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 앨범 삭제\r\n");
      out.write("        function deleteLbm(lbmno){\r\n");
      out.write("            \r\n");
      out.write("            var html;\r\n");
      out.write("            html += '<div class=\"title_box\">앨범을 선택해주세요.</div>';\r\n");
      out.write("            html += '<div class=\"row\"></div>';\r\n");
      out.write("            \r\n");
      out.write("             $.ajax({\r\n");
      out.write("                type:'POST',\r\n");
      out.write("                url: '/app/sceneAlbum/removeLbm',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json'\r\n");
      out.write("                },\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                   \"lbmno\" :  lbmno\r\n");
      out.write("                }),\r\n");
      out.write("                success:function(data){\r\n");
      out.write("                    $('.title_box').text('앨범을 선택해주세요.').css('cursor','default').next().find('span.openIcon').remove();\r\n");
      out.write("                    removedLbmno.push(lbmno);\r\n");
      out.write("                    commonAlert('success', '앨범을 삭제하였습니다.');\r\n");
      out.write("                    showLbmList(data);\r\n");
      out.write("                    \r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 앨범 목록 보여주기\r\n");
      out.write("         function showLbmList(data){\r\n");
      out.write("            var html = '';\r\n");
      out.write("            for(var i=0; i<data.sceneAlbumList.length; i++){\r\n");
      out.write("                \r\n");
      out.write("            html += '<div class=\"album_title al_wrap text-center\"';\r\n");
      out.write("            html += 'onclick=\"editAlbum(' + data.sceneAlbumList[i].lbmno + ',\\'' + data.sceneAlbumList[i].lbmTitle + '\\','+ data.sceneAlbumList[i].open+')\">'; \r\n");
      out.write("            html += '<div class=\"al_overflow\">'+data.sceneAlbumList[i].lbmTitle+ '</div>';\r\n");
      out.write("            html += '<i class=\"fas fa-trash-alt al_trash\"';\r\n");
      out.write("            html += '   onclick=\"removeLbm('+data.sceneAlbumList[i].lbmno+')\"></i></div>';\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("            $('.boxList').html(html);\r\n");
      out.write("        } \r\n");
      out.write("        \r\n");
      out.write("        // 앨범별 보유 장면 - 수정모달에서 보여주기\r\n");
      out.write("        function showSrList(data){\r\n");
      out.write("            console.log('showSrList 진입');\r\n");
      out.write("            var html = '';\r\n");
      out.write("            for(var i=0; i<data.sceneReview.length; i++){\r\n");
      out.write("            html += '<div class=\"col-4\">';\r\n");
      out.write("            html += '<div class=\"btn-group\">';\r\n");
      out.write("            html += '<a class=\"c-pointer\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"fas fa-ellipsis-h\"></i></a>';\r\n");
      out.write("            html += '<div class=\"dropdown-menu\">';\r\n");
      out.write("            html += '<a class=\"dropdown-item album-img\" href=\"#\" onclick=\"setImg(\\'' + data.sceneReview[i].photo + '\\', \\'' + data.srList[i].lbmno + '\\')\">대표이미지 설정</a>';\r\n");
      out.write("            html += '<a class=\"dropdown-item\" href=\"#\" onclick=\"removeImg(\\'' + data.sceneReview[i].srno + '\\', \\'' + data.srList[i].lbmno + '\\')\">삭제</a>';\r\n");
      out.write("            html += '</div>';\r\n");
      out.write("            html += '</div>';\r\n");
      out.write("            html += '<img class=\"card-img-top hot-sr-img scene\"';\r\n");
      out.write("            html += '           src=\"/upload/sceneReview/'\r\n");
      out.write("            html +=                     data.sceneReview[i].photo;\r\n");
      out.write("            html += '\"           alt=\"Card image cap\"></div>';\r\n");
      out.write("            }\r\n");
      out.write("            $('.srlist').html(html);\r\n");
      out.write("            \r\n");
      out.write("            if($('.srlist').children().length == 0){\r\n");
      out.write("                $('.srlist').html('<div style=\"margin-top: 13rem;\"><p style=\"text-align: center;\">해당 앨범에 보관된 장면이 없습니다.</p></div>');\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 앨범속 장면 삭제\r\n");
      out.write("        function removeImg(srno, lbmno){\r\n");
      out.write("\r\n");
      out.write("             $.ajax({\r\n");
      out.write("                type:'POST',\r\n");
      out.write("                url: '/app/sceneAlbum/removeImg',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json'\r\n");
      out.write("                },\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                   \"lbmno\" :  lbmno,\r\n");
      out.write("                   \"srno\" : srno\r\n");
      out.write("                }),\r\n");
      out.write("                success:function(data){\r\n");
      out.write("                    commonAlert('success', '장면을 삭제하였습니다.');\r\n");
      out.write("                    showSrList(data);\r\n");
      out.write("                }\r\n");
      out.write("            }); \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // 대표이미지 설정\r\n");
      out.write("        function setImg(photo, lbmno){\r\n");
      out.write("            \r\n");
      out.write("             $.ajax({\r\n");
      out.write("                type:'POST',\r\n");
      out.write("                url: '/app/sceneAlbum/addLbmImg',\r\n");
      out.write("                headers: {\r\n");
      out.write("                    'Content-Type': 'application/json'\r\n");
      out.write("                },\r\n");
      out.write("                data: JSON.stringify({\r\n");
      out.write("                   \"lbmno\" :  lbmno,\r\n");
      out.write("                   \"phot\" : photo\r\n");
      out.write("                }),\r\n");
      out.write("                success:function(data){\r\n");
      out.write("                    commonAlert('success', '대표이미지로 설정하였습니다.');\r\n");
      out.write("                }\r\n");
      out.write("            }); \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function goToSR(mvno,srno){\r\n");
      out.write("            location.href = \"/app/sceneReview/review?mvno=\"+mvno+\"&srno=\"+srno;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/jsp/sceneAlbum/detail.jsp(12,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${isMyAlbum == true}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<div class=\"a_btn btn btn-primary btn-lg mr-2\"\r\n");
          out.write("                    onclick=\"editButton(");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneAlbum.lbmno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(',');
          out.write(' ');
          out.write('\'');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneAlbum.lbmTitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write('\'');
          out.write(',');
          out.write(' ');
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneAlbum.open}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write(')');
          out.write('"');
          out.write(' ');
          out.write(">수정하기</div>\r\n");
          out.write("                <input type=\"hidden\" data-toggle=\"modal\" id=\"mgrAlbum\"\r\n");
          out.write("                    data-target=\"#mgrModal\" />\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/jsp/sceneAlbum/detail.jsp(24,12) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty sceneReview}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("<span class=\"sr_empty\">보관된 장면이 없습니다.</span>\r\n");
          out.write("            ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/jsp/sceneAlbum/detail.jsp(27,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("sceneReview");
      // /WEB-INF/jsp/sceneAlbum/detail.jsp(27,12) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/jsp/sceneAlbum/detail.jsp(27,12) '${sceneReview}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${sceneReview}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/jsp/sceneAlbum/detail.jsp(27,12) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("status");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("<div class=\"col-4 scene c-pointer\" onclick=\"goToSR(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneReview.mvno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(',');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneReview.srno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")\">\r\n");
            out.write("                    <img class=\"card-img-top hot-sr-img\"\r\n");
            out.write("                        src=\"/upload/sceneReview/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneReview.photo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"\r\n");
            out.write("                        alt=\"Card image cap\">\r\n");
            out.write("                    <div class=\"card-body\">\r\n");
            out.write("                        <div class=\"card-title overflow\">\r\n");
            out.write("                            <b><span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneReview.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span></b>\r\n");
            out.write("                           \r\n");
            out.write("                        </div>\r\n");
            out.write("                        <span class=\"sceneTime\">(");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sceneReview.time}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(")</span>\r\n");
            out.write("                    </div>\r\n");
            out.write("                </div>\r\n");
            out.write("\r\n");
            out.write("            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
